@model Bela.UI.Models.Usuario

@{
    ViewBag.Title = "Liceo de puriscal";
    Layout = "~/Views/Shared/_Perfil.cshtml";

}



<div id="wrapper">
    <div class="overlay"></div>

    <!-- Sidebar -->
    <nav class="navbar navbar-inverse navbar-fixed-top menu" id="sidebar-wrapper" role="navigation">
        <ul class="nav sidebar-nav">
            <li class="sidebar-brand">
                <a href="#">
                    Menu
                </a>
            </li>
            <li>
                @Html.ActionLink("Inicio", "Inicio", "Admin")
            </li>
            <li>
                @Html.ActionLink("Crear Noticia", "CrearNoticia", "Admin", null)
            </li>
            <li>
                @Html.ActionLink("Mensajes", "CrearNoticia", "Admin")
            </li>
            <li>
                @Html.ActionLink("NoticiasInternas", "NoticiasInternas", "Noticia")
            </li>
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Cuentas<span class="caret"></span></a>
                <ul class="dropdown-menu" role="menu">
                    <li class="dropdown-header">Opciones</li>
                    <li>@Html.ActionLink("Crear Cuenta", "CrearCuenta", "Admin", null, new { @class = "activeMenu" })</li>
                    <li>@Html.ActionLink("Administrar Cuentas", "Cuentas", "Admin")</li>
                    <li>@Html.ActionLink("Adminitrar Secciones", "AdminSecciones", "Admin")</li>
                </ul>
            </li>
        </ul>
    </nav>
    <!-- /#sidebar-wrapper -->
    <!-- Page Content -->
    <div id="page-content-wrapper">
        <button type="button" class="hamburger is-closed menubtn" data-toggle="offcanvas">
            <span class="hamb-top"></span>
            <span class="hamb-middle"></span>
            <span class="hamb-bottom"></span>
        </button>


        @if (TempData["mensajeError"] != null && TempData["mensajeError"].Equals("Error"))
        {
            <div class="container">
                <div id="Mensaje">
                    <div class=" alert alert-danger alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Ingrese todos los datos necesarios</strong>
                    </div>
                </div>
            </div>

        }
        else if (TempData["estado"] != null && TempData["estado"].Equals("Usuario creado"))
        {
            <div class="container">
                <div id="Mensaje">
                    <div class=" alert alert-success alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Cuenta Creada</strong>
                    </div>
                </div>
            </div>

        }



        @using (Html.BeginForm("CrearCuenta", "Admin", FormMethod.Post))
        {
            Html.ValidationSummary(true);
            Html.EnableClientValidation(true);


            <section class="section-padding" id="contact">
                <div class="container">

                    @if (@ViewData["mensajeCuenta"] != null)
                    {
                        <div class="text-center" style="color:green;">
                            <h2>@ViewData["mensajeCuenta"]</h2>
                        </div>
                    }

                    @if (@ViewData["mensajeError"] != null)
                    {
                        <div class="text-center" style="color:red">
                            <h2>@ViewData["mensajeError"]</h2>
                        </div>
                    }

                    <div class="row white">
                        <div class="col-md-8 col-md-offset-4">
                            <div class="section-title">
                                <h2 class="titulos">Crear Cuenta</h2>
                            </div>
                        </div>
                        <div class="col-md-11 col-md-offset-4">
                            <div class="col-md-4 col-sm-6" style="padding-left:0px;">
                                <h3 class="cont-title-login">Ingrese los datos necesarios para la creacion de la cuenta</h3>

                                <div class="contact-info">
                                    <form action="" method="post" role="form" class="contactForm">

                                        <div class="form-group">
                                            @Html.Label("Tipo de usuario")
                                            @Html.DropDownList("dropIdTipoUsuario", (SelectList)ViewBag.TiposUsuarios, "Seleccione Tipo de usuario", new { @class = "form-control", onchange = "mostrarSecciones()", required = "required" })
                                        </div>

                                        <div class="form-group" id="divSecciones" style="display:none">
                                            @Html.Label("Seccion")
                                            @Html.DropDownList("dropIdSeccion", (SelectList)ViewBag.Secciones, "Seleccione una Seccion", new { @class = "form-control" })
                                        </div>


                                        <div class="form-group">
                                            @Html.Label("Nombre")
                                            @Html.TextBoxFor(x => x.nombre, new
                                       {
                                           @class = "form-control",
                                           @name = "nombre",
                                           @placeholder = "Nombre",
                                           required = "",
                                           oninvalid = "this.setCustomValidity('Ingrese un Nombre')",
                                           oninput = "setCustomValidity('')"
                                       })

                                        </div>

                                        <div class=" form-group">
                                            @Html.Label("Apellido 1")
                                            @Html.TextBoxFor(x => x.apellido1, new
                                       {
                                           @class = "form-control",
                                           @name = "apellido1",
                                           @placeholder = "Apellido1",
                                           required = "",
                                           oninvalid = "this.setCustomValidity('Ingrese el primer apellido')",
                                           oninput = "setCustomValidity('')"
                                       })

                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Apellido 2")
                                            @Html.TextBoxFor(x => x.apellido2, new
                                       {
                                           @class = "form-control",
                                           @name = "apellido2",
                                           @placeholder = "Apellido2",
                                           required = "",
                                           oninvalid = "this.setCustomValidity('Ingrese el segundo')",
                                           oninput = "setCustomValidity('')"
                                       })

                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Cedula")
                                            @Html.TextBoxFor(x => x.cedula, new
                                       {
                                           @class = "form-control",
                                           @name = "cedula",
                                           @placeholder = "Cedula",
                                           required = "",
                                           oninvalid = "this.setCustomValidity('Ingrese numero de cedula')",
                                           oninput = "setCustomValidity('')",
                                           onkeypress = "return justNumbers(event);" 
                                       })

                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Correo")
                                            @Html.TextBoxFor(x => x.correo, new
                                       {
                                           @Type = "email",
                                           @class = "form-control",
                                           @name = "correo",
                                           @placeholder = "Correo",
                                           required = "",
                                           oninvalid = "this.setCustomValidity('Ingrese un correo')",
                                           oninput = "setCustomValidity('')"
                                       })
                                        </div>



                                        <div class="form-group">
                                            @Html.Label("Usuario")
                                            @Html.TextBoxFor(x => x.usuario, new
                                       {
                                           @Type = "Text",
                                           @class = "form-control",
                                           @name = "usuario",
                                           @placeholder = "Usuario",
                                           required = "",
                                           oninvalid = "this.setCustomValidity('Ingrese un usuario')",
                                           oninput = "setCustomValidity('')"
                                       })

                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Contraseña")
                                            @Html.TextBoxFor(x => x.contrasena, new
                                       {
                                           @Type = "password",
                                           @class = "form-control",
                                           @name = "contrasena",
                                           @placeholder = "Contraseña",
                                           required = "",
                                           oninvalid = "this.setCustomValidity('Ingrese una contraseña')",
                                           oninput = "setCustomValidity('')"
                                       })

                                        </div>


                                        <button type="submit" class="btn btn-crear">Crear Cuenta</button>

                                    </form>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </section>

        }

    </div>
    <!-- /#page-content-wrapper -->
</div>
<!-- /#wrapper -->



<script>

    window.onload = function () {
        $("#Mensaje").fadeOut(4000);
    }

    function mostrarSecciones() {
        var x = document.getElementById("dropIdTipoUsuario").value;
        if (x == 3) {
            $('#divSecciones').css('display', 'block');
        } else {
            $('#divSecciones').css('display', 'none');
        }

    }



    function justNumbers(e) {
        var keynum = window.event ? window.event.keyCode : e.which;
        if ((keynum == 8) || (keynum == 46))
            return true;

        return /\d/.test(String.fromCharCode(keynum));
    }

</script>