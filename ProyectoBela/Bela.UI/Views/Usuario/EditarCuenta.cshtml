@model Bela.UI.Models.Usuario

@{
    ViewBag.Title = "Liceo de puriscal";
    Layout = "~/Views/Shared/_Perfil.cshtml";

}


<div id="wrapper">
    <div class="overlay"></div>

    <!-- Sidebar -->
    <nav class="navbar navbar-inverse navbar-fixed-top menu" id="sidebar-wrapper" role="navigation">
        <ul class="nav sidebar-nav">
            <li class="sidebar-brand">
                <a href="#">
                    Menu
                </a>
            </li>
            <li>
                @Html.ActionLink("Inicio", "Inicio", "Admin")
            </li>
            <li>
                @Html.ActionLink("Crear Noticia", "CrearNoticia", "Admin", null)
            </li>
            <li>
                @Html.ActionLink("Mensajes", "CrearNoticia", "Admin")
            </li>
            <li>
                @Html.ActionLink("NoticiasInternas", "NoticiasInternas", "Noticia")
            </li>
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Cuentas<span class="caret"></span></a>
                <ul class="dropdown-menu" role="menu">
                    <li class="dropdown-header">Opciones</li>
                    <li>@Html.ActionLink("Crear Cuenta", "CrearCuenta", "Usuario")</li>
                    <li>@Html.ActionLink("Administrar Cuentas", "Cuentas", "Usuario", null, new { @class = "activeMenu" })</li>
                    <li>@Html.ActionLink("Mi Cuenta", "MiCuenta", "Usuario")</li>
                </ul>
            </li>
        </ul>
    </nav>
    <!-- /#sidebar-wrapper -->
    <!-- Page Content -->
    <div id="page-content-wrapper">
        <button type="button" class="hamburger is-closed menubtn" data-toggle="offcanvas">
            <span class="hamb-top"></span>
            <span class="hamb-middle"></span>
            <span class="hamb-bottom"></span>
        </button>


        @if (TempData["estado"] != null)
        {
            <div class="container">
                <div class="alert alert-danger alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>@TempData["estado"]</strong>
                </div>
            </div>
        }



        @using (Html.BeginForm("EditarCuenta", "Usuario", FormMethod.Post))
        {
            Html.ValidationSummary(true);
            Html.EnableClientValidation(true);


            <section class="section-padding" id="contact">
                <div class="container">
                    @if (@ViewData["mensajeCuenta"] != null)
                    {
                        <div class="text-center" style="color:green;">
                            <h2>@ViewData["mensajeCuenta"]</h2>
                        </div>
                    }

                    @if (@ViewData["mensajeError"] != null)
                    {
                        <div class="text-center" style="color:red">
                            <h2>@ViewData["mensajeError"]</h2>
                        </div>
                    }

                    <div class="row white">
                        <div class="col-md-8 col-md-offset-4">
                            <div class="section-title">
                                <h2 class="head-title black"> Datos de Cuenta</h2>
                            </div>
                        </div>
                        <div class="col-md-11 col-md-offset-4">
                            <div class="col-md-4 col-sm-6" style="padding-left:0px;">
                                <h3 class="cont-title-login">Modifique datos o elimine la cuenta</h3>

                                <div class="contact-info">
                                    <form action="" method="post" role="form" class="contactForm">

                                        <div class="form-group">
                                            @Html.TextBoxFor(x => x.idPersona, new { @class = "form-control", @name = "idPersona", @readonly = true, style = "display: none;" })
                                        </div>


                                        <div class="form-group">
                                            <label for="nombre">Nombre</label>
                                            @Html.TextBoxFor(x => x.nombre, new { @class = "form-control", @name = "nombre", @placeholder = "Nombre" })

                                        </div>

                                        <div class=" form-group">
                                            @Html.Label("Apellido 1")
                                            @Html.TextBoxFor(x => x.apellido1, new { @class = "form-control", @name = "apellido1", @placeholder = "Apellido1" })

                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Apellido 2")
                                            @Html.TextBoxFor(x => x.apellido2, new { @class = "form-control", @name = "apellido2", @placeholder = "Apellido2" })

                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Correo")
                                            @Html.TextBoxFor(x => x.correo, new { @Type = "email", @class = "form-control", @name = "correo", @placeholder = "Correo" })
                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Tipo de usuario")
                                            @Html.DropDownList("dropIdTipoUsuario", (SelectList)ViewBag.TiposUsuarios, "Seleccione Tipo de usuario", new { @Value = "1", @class = "form-control" })
                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Usuario")
                                            @Html.TextBoxFor(x => x.usuario, new { @Type = "Text", @class = "form-control", @name = "usuario", @placeholder = "Usuario" })

                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Contraseña")
                                            @Html.TextBoxFor(x => x.contrasena, new { @Type = "password", @class = "form-control", @name = "contrasena", @placeholder = "Contraseña" })

                                        </div>

                                        <div class="btn-group">
                                            <button type="submit" class="btn btn-crear">Modificar Cuenta</button>
                                            <button class="btn btn-danger" data-title="Delete" data-toggle="modal" data-target="#delete">Eliminar</button>
                                        </div>

                                    </form>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </section>





        }

    </div>
    <!-- /#page-content-wrapper -->
</div>
<!-- /#wrapper -->




<div class="modal fade" id="delete" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
                <h4 class="modal-title custom_align" id="Heading">Eliminar esta cuenta</h4>
            </div>
            <div class="modal-body">

                <div class="alert alert-danger"><span class="glyphicon glyphicon-warning-sign"></span> Estas seguro de que quieres eliminar esta cuenta</div>

            </div>

            <div class="modal-footer ">
                <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("EliminarCuenta", "Usuario", new {idPersona=Model.idPersona })'"><span class="glyphicon glyphicon-ok-sign"></span> Si</button>
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> No</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
